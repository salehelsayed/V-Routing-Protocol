buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.2.4"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.5'
    // id 'checkstyle'
}

group = 'com.vrouting'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
    
    // Logging
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.slf4j:slf4j-api'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    
    // JGraphT
    implementation 'org.jgrapht:jgrapht-core:1.5.2'
    
    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // JUnit Jupiter API and Engine for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // Additional testing libraries
    testImplementation 'org.mockito:mockito-core:5.0.0'
    testImplementation 'org.assertj:assertj-core:3.23.0'
}

springBoot {
    mainClass = 'com.vrouting.vrouting.VRoutingApplication'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.release = 17
}

bootJar {
    mainClass = 'com.vrouting.vrouting.VRoutingApplication'
}

// Javadoc configuration
tasks.javadoc {
    options {
        title = "VRouting Project Documentation"
        version = project.version
    }
}



