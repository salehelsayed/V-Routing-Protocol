{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\s\\\\AndroidStudioProjects\\\\V-Routing-Protocol\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport NetworkVisualization from './components/NetworkVisualization';\nimport SimulationControls from './components/SimulationControls';\nimport MetricsDisplay from './components/MetricsDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nconst WEBSOCKET_URL = `${API_BASE_URL}/vrouting-websocket`;\nfunction App() {\n  _s();\n  const [networkState, setNetworkState] = useState(null);\n  const [stompClient, setStompClient] = useState(null);\n  useEffect(() => {\n    // Connect to WebSocket\n    const socket = new SockJS(WEBSOCKET_URL);\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      setStompClient(client);\n      client.subscribe('/topic/network-state', message => {\n        const newState = JSON.parse(message.body);\n        setNetworkState(newState);\n      });\n    });\n    return () => {\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, []);\n  const handleStartSimulation = async params => {\n    try {\n      await fetch(`${API_BASE_URL}/api/simulation/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)\n      });\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n    }\n  };\n  const handleStopSimulation = async () => {\n    try {\n      await fetch(`${API_BASE_URL}/api/simulation/stop`, {\n        method: 'POST'\n      });\n      setNetworkState(null);\n    } catch (error) {\n      console.error('Failed to stop simulation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"V-Routing Protocol Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(SimulationControls, {\n          onStart: handleStartSimulation,\n          onStop: handleStopSimulation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MetricsDisplay, {\n          metrics: networkState === null || networkState === void 0 ? void 0 : networkState.metrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-panel\",\n        children: /*#__PURE__*/_jsxDEV(NetworkVisualization, {\n          networkState: networkState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"PAgNOUw2pXDvHhIWMLkO9g66/zI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SockJS","Stomp","NetworkVisualization","SimulationControls","MetricsDisplay","jsxDEV","_jsxDEV","API_BASE_URL","WEBSOCKET_URL","App","_s","networkState","setNetworkState","stompClient","setStompClient","socket","client","over","connect","subscribe","message","newState","JSON","parse","body","disconnect","handleStartSimulation","params","fetch","method","headers","stringify","error","console","handleStopSimulation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onStop","metrics","_c","$RefreshReg$"],"sources":["c:/Users/s/AndroidStudioProjects/V-Routing-Protocol/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport NetworkVisualization from './components/NetworkVisualization';\nimport SimulationControls from './components/SimulationControls';\nimport MetricsDisplay from './components/MetricsDisplay';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:8080';\nconst WEBSOCKET_URL = `${API_BASE_URL}/vrouting-websocket`;\n\nfunction App() {\n    const [networkState, setNetworkState] = useState(null);\n    const [stompClient, setStompClient] = useState(null);\n\n    useEffect(() => {\n        // Connect to WebSocket\n        const socket = new SockJS(WEBSOCKET_URL);\n        const client = Stomp.over(socket);\n\n        client.connect({}, () => {\n            setStompClient(client);\n            client.subscribe('/topic/network-state', (message) => {\n                const newState = JSON.parse(message.body);\n                setNetworkState(newState);\n            });\n        });\n\n        return () => {\n            if (client) {\n                client.disconnect();\n            }\n        };\n    }, []);\n\n    const handleStartSimulation = async (params) => {\n        try {\n            await fetch(`${API_BASE_URL}/api/simulation/start`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(params),\n            });\n        } catch (error) {\n            console.error('Failed to start simulation:', error);\n        }\n    };\n\n    const handleStopSimulation = async () => {\n        try {\n            await fetch(`${API_BASE_URL}/api/simulation/stop`, {\n                method: 'POST',\n            });\n            setNetworkState(null);\n        } catch (error) {\n            console.error('Failed to stop simulation:', error);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <header className=\"app-header\">\n                <h1>V-Routing Protocol Visualization</h1>\n            </header>\n            <main className=\"app-main\">\n                <div className=\"control-panel\">\n                    <SimulationControls\n                        onStart={handleStartSimulation}\n                        onStop={handleStopSimulation}\n                    />\n                    <MetricsDisplay metrics={networkState?.metrics} />\n                </div>\n                <div className=\"visualization-panel\">\n                    <NetworkVisualization networkState={networkState} />\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}