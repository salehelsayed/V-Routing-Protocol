{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s\\\\AndroidStudioProjects\\\\V-Routing-Protocol\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport NetworkVisualization from './components/NetworkVisualization';\nimport SimulationControls from './components/SimulationControls';\nimport MetricsDisplay from './components/MetricsDisplay';\nimport SimulationStatus from './components/SimulationStatus';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nconst WEBSOCKET_URL = `${API_BASE_URL}/vrouting-websocket`;\nfunction App() {\n  _s();\n  const [networkState, setNetworkState] = useState(null);\n  const [stompClient, setStompClient] = useState(null);\n  const [simulationStatus, setSimulationStatus] = useState(null);\n  useEffect(() => {\n    const client = new Client({\n      webSocketFactory: () => new SockJS(WEBSOCKET_URL),\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        client.subscribe('/topic/network-state', message => {\n          const newState = JSON.parse(message.body);\n          console.log('Received new network state:', newState);\n          setNetworkState(newState);\n        });\n        client.subscribe('/topic/simulation-status', message => {\n          const status = JSON.parse(message.body);\n          console.log('Received simulation status:', status);\n          setSimulationStatus(status);\n        });\n      },\n      onDisconnect: () => {\n        console.log('Disconnected from WebSocket');\n        setSimulationStatus(null);\n      },\n      onStompError: frame => {\n        console.error('STOMP error:', frame);\n      }\n    });\n    client.activate();\n    setStompClient(client);\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n      }\n    };\n  }, []);\n  const handleStartSimulation = async params => {\n    console.log('Start Simulation clicked with params:', params);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/simulation/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)\n      });\n      console.log('Simulation start response:', response);\n      if (!response.ok) {\n        console.error('Failed to start simulation:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n    }\n  };\n  const handleStopSimulation = async () => {\n    try {\n      await fetch(`${API_BASE_URL}/api/simulation/stop`, {\n        method: 'POST'\n      });\n      setNetworkState(null);\n      setSimulationStatus(null);\n    } catch (error) {\n      console.error('Failed to stop simulation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"V-Routing Protocol Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(SimulationControls, {\n          onStart: handleStartSimulation,\n          onStop: handleStopSimulation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimulationStatus, {\n          status: simulationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MetricsDisplay, {\n          metrics: networkState === null || networkState === void 0 ? void 0 : networkState.metrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-panel\",\n        children: /*#__PURE__*/_jsxDEV(NetworkVisualization, {\n          networkState: networkState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"I0oRhDKKXOx73qT5eBIWaoneQjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Client","SockJS","NetworkVisualization","SimulationControls","MetricsDisplay","SimulationStatus","jsxDEV","_jsxDEV","API_BASE_URL","WEBSOCKET_URL","App","_s","networkState","setNetworkState","stompClient","setStompClient","simulationStatus","setSimulationStatus","client","webSocketFactory","onConnect","console","log","subscribe","message","newState","JSON","parse","body","status","onDisconnect","onStompError","frame","error","activate","connected","deactivate","handleStartSimulation","params","response","fetch","method","headers","stringify","ok","statusText","handleStopSimulation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onStop","metrics","_c","$RefreshReg$"],"sources":["C:/Users/s/AndroidStudioProjects/V-Routing-Protocol/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport NetworkVisualization from './components/NetworkVisualization';\nimport SimulationControls from './components/SimulationControls';\nimport MetricsDisplay from './components/MetricsDisplay';\nimport SimulationStatus from './components/SimulationStatus';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:8080';\nconst WEBSOCKET_URL = `${API_BASE_URL}/vrouting-websocket`;\n\nfunction App() {\n    const [networkState, setNetworkState] = useState(null);\n    const [stompClient, setStompClient] = useState(null);\n    const [simulationStatus, setSimulationStatus] = useState(null);\n\n    useEffect(() => {\n        const client = new Client({\n            webSocketFactory: () => new SockJS(WEBSOCKET_URL),\n            onConnect: () => {\n                console.log('Connected to WebSocket');\n                client.subscribe('/topic/network-state', message => {\n                    const newState = JSON.parse(message.body);\n                    console.log('Received new network state:', newState);\n                    setNetworkState(newState);\n                });\n                client.subscribe('/topic/simulation-status', message => {\n                    const status = JSON.parse(message.body);\n                    console.log('Received simulation status:', status);\n                    setSimulationStatus(status);\n                });\n            },\n            onDisconnect: () => {\n                console.log('Disconnected from WebSocket');\n                setSimulationStatus(null);\n            },\n            onStompError: (frame) => {\n                console.error('STOMP error:', frame);\n            }\n        });\n\n        client.activate();\n        setStompClient(client);\n\n        return () => {\n            if (client.connected) {\n                client.deactivate();\n            }\n        };\n    }, []);\n\n    const handleStartSimulation = async (params) => {\n        console.log('Start Simulation clicked with params:', params);\n        try {\n            const response = await fetch(`${API_BASE_URL}/api/simulation/start`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(params),\n            });\n            console.log('Simulation start response:', response);\n            if (!response.ok) {\n                console.error('Failed to start simulation:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Failed to start simulation:', error);\n        }\n    };\n\n    const handleStopSimulation = async () => {\n        try {\n            await fetch(`${API_BASE_URL}/api/simulation/stop`, {\n                method: 'POST',\n            });\n            setNetworkState(null);\n            setSimulationStatus(null);\n        } catch (error) {\n            console.error('Failed to stop simulation:', error);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <header className=\"app-header\">\n                <h1>V-Routing Protocol Visualization</h1>\n            </header>\n            <main className=\"app-main\">\n                <div className=\"control-panel\">\n                    <SimulationControls\n                        onStart={handleStartSimulation}\n                        onStop={handleStopSimulation}\n                    />\n                    <SimulationStatus status={simulationStatus} />\n                    <MetricsDisplay metrics={networkState?.metrics} />\n                </div>\n                <div className=\"visualization-panel\">\n                    <NetworkVisualization networkState={networkState} />\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}